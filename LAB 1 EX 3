//ANGELL NATHALINE JALUMIE
//BI19160296
//LAB1 EXERCISE 3

#include <iostream>
using namespace std;

void ChangeIt_1(int n) {
 n = 5;
}
void ChangeIt_2(int *n) {
 *n = 6;
} 

void ChangeIt_3(int &n) {
 n = 7;
}
int ChangeIt_4(int n) {
 n = 8;
 return n;
}
 /*3. Write a function called void swap with two parameters, which will receive the address
of x and y as pointer. The function should swap the value of x and y only if x is larger than
y. Print the value of x and y after the function call*/
void swap(int* n1, int* n2) {
    int temp;
    temp = *n1;
    *n1 = *n2;
    *n2 = temp;
}

double getAverage(int *array, int SIZE){
	
	double average = 0;
	int sum = 0;
	for (int i = 0; i < SIZE; i++){
		sum += array[i];
	}
	average = sum/SIZE;
	cout << "Average: " << average;
	
return average;
}

main(){
 int *p; //declare p as pointer
 int x=10, y=7, SIZE=5, data[SIZE]={1,3,2,5,4};
 p=&x; //reference of x
 double average;

 ChangeIt_1(x);//call by value
 cout << "ChangeIt_1 : " << *p << endl;

 ChangeIt_2(&x);//call by reference
 cout << "ChangeIt_2 : " << *p << endl;

 ChangeIt_3(x); //call by value
 cout << "ChangeIt_3 : " << *p << endl;

 x = ChangeIt_4(x); // call by value
 cout << "ChangeIt_4 : " << *p << endl;
 

    cout << "\nBefore swapping" << endl;
    cout << "x = " << x << endl;
    cout << "y = " << y << endl;

    // call function to swap numbers
    if(x > y){
	
    swap(&x, &y);

    cout << "\nAfter swapping" << endl;
    cout << "x = " << x << endl;
    cout << "y = " << y << endl;
    }
    
    average = getAverage(data, SIZE);
	
return 0;
}


 
